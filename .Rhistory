geo_coordinate_weed_wild <- read.csv("~/Downloads/geo_coordinate_weed_wild.csv")
View(geo_coordinate_weed_wild)
##library
install.packages("leaflet")
library(leaflet)
long  <- geo_coordinate_weed_wild$Long
lat  <- geo_coordinate_weed_wild$lat
popup  <- geo_coordinate_weed_wild$Lab.ID
subgroup  <- geo_coordinate_weed_wild$group
pal = colorFactor(c("black","purple"), domain = c("South Asian weedy rice","South Asian wild rice"))
df = data.frame(lat, long, popup, subgroup)
leaflet( ) %>% addTiles() %>% addCircleMarkers(radius = 5, fill = TRUE, data=df, lat = ~lat, lng= ~long)
df = data.frame(lat, long, popup, subgroup)
leaflet( ) %>% addTiles() %>% addCircleMarkers(radius = 5, data=df, lat = ~lat, lng= ~long)
library(leaflet)
long  <- geo_coordinate_weed_wild$Long
lat  <- geo_coordinate_weed_wild$lat
popup  <- geo_coordinate_weed_wild$Lab.ID
subgroup  <- geo_coordinate_weed_wild$group
df = data.frame(lat, long, popup, subgroup)
df = data.frame(lat, long, popup, subgroup)
long
lat
lat
long  <- geo_coordinate_weed_wild$Long
long  <- geo_coordinate_weed_wild$Long
long
Long
long
lat
##library
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
##library
install.packages("leaflet")
library(leaflet)
ag-clean-meta <- fread("ftp://ftp.microbio.me/AmericanGut/ag-July-29-2016/04-meta/ag-cleaned.txt",header = T, sep="\t")
require(data.table)
library(data.table)
require(data.table)
require(data.table)
require(data.frame)
library(data.frame)
install.packages("data.table")
library(data.table)
ag-clean-meta <- fread("ftp://ftp.microbio.me/AmericanGut/ag-July-29-2016/04-meta/ag-cleaned.txt",header = T, sep="\t")
clean_mega <- fread("ftp://ftp.microbio.me/AmericanGut/ag-July-29-2016/04-meta/ag-cleaned.txt",header = T, sep="\t")
View(clean_mega)
summary(clean_mega)
ag_10k_fecal <- fread("ftp://ftp.microbio.me/AmericanGut/latest/11-packaged/fecal/100nt/all_participants/all_samples/10k/ag_10k_fecal.txt",header = T,sep = "\t")
View(ag_10k_fecal)
summary(ag_10k_fecal)
head(ag_10k_fecal)
summary(ag_10k_fecal)
species_abundance_100 <- read.table("~/Dropbox/Insight_project/species_abundance_100.txt", header=TRUE, quote="\"")
View(species_abundance_100)
rm(list=lsc)
species_abundance_100 <- read.table("~/Dropbox/Insight_project/species_abundance_100.txt", header=TRUE, quote="\"")
View(species_abundance_100)
species_abund <- read.delim("~/Dropbox/Insight_project/species_abund.txt")
View(species_abund)
head(species_abund)
summary(species_abund)
View(species_abund)
View(species_abund)
species_abund <- read.delim("~/Dropbox/Insight_project/species_abund.txt")
summary(species_abund)
View(species_abund)
species_abund$Group = factor(species_abund$Group)
summary(species_abund)
species_abund$Group = factor(species_abund$Group)
View(species_abund)
species_abund <- read.delim("~/Dropbox/Insight_project/species_abund.txt")
summary(species_abund)
speices_abund(,2)
head(species_abund,2)
mylogit <- glm(Group~SP1+SP2+SP3+SP4+SP5+SP6+SP7+SP8+SP9+SP10+SP11+SP12+SP13+SP14+SP15, data = species_abund,family="binomial")
View(species_abund)
View(species_abund)
View(species_abund)
species_abund <- read.delim("~/Dropbox/Insight_project/species_abund.txt")
summary(species_abund)
head(species_abund, 2)
summary(species_abund)
View(species_abund)
View(species_abund)
mylogit <- glm(Group~SP1+SP2+SP3+SP4+SP5+SP6+SP7+SP8+SP9+SP10+SP11+SP12+SP13+SP14, data = species_abund,family="binomial")
`27SP_abundance` <- read.delim("~/Dropbox/Insight_project/27SP_abundance.txt")
View(`27SP_abundance`)
> 27SP_abundance <- read.delim("~/Dropbox/Insight_project/27SP_abundance.txt")
27SP_abundance <- read.delim("~/Dropbox/Insight_project/27SP_abundance.txt")
27SPabundance <- read.delim("~/Dropbox/Insight_project/27SP_abundance.txt")
new_abund <- read.delim("~/Dropbox/Insight_project/27SP_abundance.txt")
new_abund <- read.delim("~/Dropbox/Insight_project/27SP_abundance.txt")
summary(new_abund)
head(new_abund)
new_abund <- read.delim("~/Dropbox/Insight_project/27SP_abundance.txt")
head(new_abund,3)
rm(list=lsc)
mylogit  <- glm(Group ~ SP1 + SP2 + SP3 + SP4 + SP5 + SP6 + SP7 + SP8 + SP9 + SP10, data = new_abund,family = "binomial")
mylogit  <- glm(Group ~ SP1 + SP2 + SP3 + SP4 + SP5 + SP6 + SP7 + SP8 + SP9 + SP10, data = new_abund,family = "binomial")
summary(mylogit)
predict(mylogit, type="response")
new_data <- read.delim("~/Dropbox/Insight_project/27SP_newdata_abundance.txt")
View(new_data)
predict(mylogit,new_data, type="response")
newdata2 <- read.delim("~/Dropbox/Insight_project/27SP_newdata2_abundance.txt")
View(newdata2)
predict(mylogit,newdata2, type="response")
mylogit <- glm(Group~SP1+SP2+SP3+SP4+SP5+SP6+SP7+SP8+SP9+SP10+SP11+SP12+SP13+SP14+SP15+SP16+SP17+SP18+SP19+SP20+SP21+SP22+SP23+SP24+SP25+SP26+SP27, data = species_abund,family="binomial")
new_abund <- read.delim("~/Dropbox/Insight_project/27SP_abundance.txt")
mylogit <- glm(Group~SP1+SP2+SP3+SP4+SP5+SP6+SP7+SP8+SP9+SP10+SP11+SP12+SP13+SP14+SP15+SP16+SP17+SP18+SP19+SP20+SP21+SP22+SP23+SP24+SP25+SP26+SP27, data = new_abund,family="binomial")
mylogit2 <- glm(Group~SP1+SP2+SP3+SP4+SP5+SP6+SP7+SP8+SP9+SP10+SP11+SP12+SP13+SP14+SP15+SP16+SP17+SP18+SP19+SP20+SP21+SP22+SP23+SP24+SP25+SP26+SP27, data = new_abund,family="binomial")
summary(mylogit2)
require("random forest")
install.packages("randomForest")
new_data <- read.delim("~/Dropbox/Insight_project/27SP_newdata_abundance.txt")
Pred1  <- predict(mylogit,new_data, type="class")
new_data <- read.delim("~/Dropbox/Insight_project/27SP_newdata_abundance.txt")
Pred1  <- predict(mylogit,new_data, type="class")
Pred1  <- predict(mylogit,new_data, type="response")
Pred2 <- as.integer(Pred1 <= 0.5)
head(Pred2)
Pred2
True <- as.interger(factor(new_data[ ,1]));
True <- as.integer(new_data[ ,1]!="Control"));
True <- as.integer(new_data[ ,1]!="Control")
mean(Pred2==True)
Pred2 <- as.integer(Pred1 >= 0.5)
True <- as.integer(new_data[ ,1]!="Control")
mean(Pred2==True)
Pred1  <- predict(mylogit,new_data, type="response")
Pred1
Pred1  <- predict(mylogit,new_data, type="response")
round(Pred1)
mean(Pred2==True)
mylogit2 <- glm(Group~SP1+SP2+SP3+SP4+SP5+SP6+SP7+SP8+SP9+SP10+SP11+SP12+SP13+SP14+SP15+SP16+SP17+SP18+SP19+SP20+SP21+SP22+SP23+SP24+SP25+SP26+SP27, data = new_abund,family="binomial")
summary(mylogit2)
Pred3  <- predict(mylogit2,new_data, type="response")
Pred4 <- as.integer(Pred3 >= 0.5)
True <- as.integer(new_data[ ,1]!="Control")
mean(Pred4==True)
Pred1
Pred3
Pred4 <- as.integer(Pred3 >= 0.5)
True <- as.integer(new_data[ ,1]!="Control")
mean(Pred4==True)
Pred4
mean(Pred4==True)
mean(Pred2==True)
exp(confint(mylogit))
View(new_abund)
View(new_abund)
train_valid <- read.csv("~/Dropbox/Insight_project/train_valid.csv")
View(train_valid)
to_PCA <- read.csv("~/Dropbox/Insight_project/to_PCA.csv")
View(to_PCA)
head(to_PCA)
microbe.pca <- prcomp(to_PCA,center = TRUE,scale. = TRUE)
print(microbe.pca)
microbe.pca
head(microbe.pca)
setwd("~/Dropbox/Insight_project")
write.csv(microbe.pca, file = "MyData.csv")
write.csv(microbe.pca, file = "MyData.csv")
head(microbe.pca)
write.csv(microbe.pca, file = "MyData.csv")
class(microbe.pca)
summary(microbe.pca)
?microbe.pca
microbe.pca[rotation]
microbe.pca[[rotation]]
microbe.pca$rotation
microbe.pca$x
head(microbe.pca$x)
write.csv(microbe.pca$x, file = "PCAvector.csv",row.names=F)
PCAvector <- read.csv("~/Dropbox/Insight_project/PCAvector.csv")
View(PCAvector)
library("car")
install.packages("car")
sp(PCAvector$PC2~PCAvector$PC1|PCAvector$Group,smooth=F,reg.line=F,grid=F,xlab="PC1",ylab="PC2"); abline(0,0,0,0)
library("car")
sp(PCAvector$PC2~PCAvector$PC1|PCAvector$Group,smooth=F,reg.line=F,grid=F,xlab="PC1",ylab="PC2"); abline(0,0,0,0)
install.packages("ggplot2")
library("ggplot2")
library("ggplot2")
p <- ggplot(PCAvector, aes(PC1, PC2, color = Group))+
geom_point()
p + stat_ellipse()
library("ggplot2")
p <- ggplot(PCAvector, aes(PC1, PC2, color = Group))+
geom_point()
p + stat_ellipse()
library("ggplot2")
p <- ggplot(PCAvector, aes(PC1, PC2, color = factor(Group))+
geom_point()
p + stat_ellipse()
p <- ggplot(PCAvector, aes(PC1, PC2, color = factor(Group)))+
geom_point()
p + stat_ellipse()
library("ggplot2")
p <- ggplot(PCAvector, aes(PC2, PC3, color = factor(Group)))+
geom_point()
p + stat_ellipse()
library("ggplot2")
p <- ggplot(PCAvector, aes(PC1, PC3, color = factor(Group)))+
geom_point()
p + stat_ellipse()
library("ggplot2")
p <- ggplot(PCAvector, aes(PC1, PC2, color = factor(Group)))+
geom_point()
p + stat_ellipse()
library("ggplot2")
p <- ggplot(PCAvector, aes(PC1, PC3, color = factor(Group)))+
geom_point()
p + stat_ellipse()
